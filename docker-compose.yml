version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: asmstudio-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: changeme
      MONGO_INITDB_DATABASE: asmstudio
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - asmstudio-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: asmstudio-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - asmstudio-network
    command: redis-server --appendonly yes

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: asmstudio-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:changeme@mongodb:27017/asmstudio?authSource=admin
      REDIS_URL: redis://redis:6379
      PORT: 3001
    env_file:
      - .env
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - asmstudio-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: asmstudio-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - asmstudio-network

  # AI Engine (Optional - for heavy processing)
  ai-engine:
    build:
      context: ./ai-engine
      dockerfile: Dockerfile
    container_name: asmstudio-ai
    restart: unless-stopped
    environment:
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      REDIS_URL: redis://redis:6379
    depends_on:
      - redis
    networks:
      - asmstudio-network

networks:
  asmstudio-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local
